# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, PaddleTS
# This file is distributed under the same license as the PaddleTS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleTS \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-21 18:08+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/modules/models/overview.rst:3 eaf3eeb3665d4aa08812e25ab03fb644
msgid "Models"
msgstr "模型"

#: ../../source/modules/models/overview.rst:5 cde3b2e46c3744d596e2fd068003aa5a
msgid ""
"Before reading this document, it is recommended to first read the "
"`TSDataset Document <../datasets/overview>`_ to understand the design of "
"`TSDataset`. Simply speaking, `TSDataset` is a unified time series data "
"structure throughout the whole modeling lifecycle. It introduces several "
"fundamental but important time series related concepts such as ``target``"
" (including ``past_target`` and ``future_target``) and ``covariates`` "
"(including ``known_covariates`` and ``observed_covariates``). A good "
"understanding of those concepts would be helpful for deep diving into "
"this documentation and building well-performed models."
msgstr ""
"在阅读本文档之前，建议先阅读 `TSDataset 文档 <../datasets/overview>`_ ，以了解TSDataset的设计。 "
"简单来说，TSDataset是PaddleTS中贯穿整个建模生命周期的、统一的时间序列数据结构。它引出了几个基本但重要的时间序列相关概念，例如待预测目标（过去目标、未来目标）以及协变量（观测协变量和未来已知协变量）。对这些概念的理解将有助于深入探究该文档并构建性能良好的模型。"

#: ../../source/modules/models/overview.rst:11 b3be9f02d0b74897a3cb06cc06c80443
msgid "PaddleTS provides three high-level features for deep time series modeling:"
msgstr "从一个较高的视角来看，PaddleTS 提供了以下三个时序建模相关的特性："

#: ../../source/modules/models/overview.rst:13 3aa56c958af64a638bc8b6ea30b98765
msgid ""
"Standard interfaces. The interfaces (`fit`, `predict`) declared in "
"`PaddleBaseModel` are designed to accept and return the unified "
"`TSDataset` as both input and output to encapsulate the complicated "
"details of processing TSDataset and building samples, simplify the API "
"usage and reduce the learning cost."
msgstr ""
"标准化的接口。 这些在 `PaddleBaseModel` 中声明的 `fit`、`predict` 标准化接口接收、返回统一的 "
"`TSDataset` 数据集，作为其输入输出，以便将一些数据集处理和样本构建的复杂细节封装起来，简化API的使用，降低学习成本。"

#: ../../source/modules/models/overview.rst:16 66a262ac5d9e436091130c6c2adab58d
msgid ""
"PaddleTS introduces the `PaddleBaseModelImpl` class, which consists of a "
"set of common functions and components throughout the modeling lifecycle "
"(e.g. _prepare_X_y, _init_metrics, compute_loss, etc.). This allows users"
" to focus more on the network architecture and provides maximum "
"convenience for the developers to build new models."
msgstr ""
"PaddleTS 设计了 `PaddleBaseModelImpl` 类，该类包含一组覆盖整个建模生命周期的通用函数与组件（如 "
"准备样本，初始化模型性能指标, "
"计算损失等）。这使得用户可以更关注深度网络架构本身，同时也为广大开发者基于PaddleTS构建新的时序模型提供了最大程度的便利。"

#: ../../source/modules/models/overview.rst:19 dacdb43b9c864a04975342e512a5b1ec
msgid ""
"Out-of-box models. PaddleTS provides off-the-shelf deep time series "
"models:"
msgstr "开箱即用的模型。PaddleTS提供一组预定义的，开箱即用的时序深度学习模型："

#: ../../source/modules/models/overview.rst:21 722c99fe739042b4b1908145b5579cf0
msgid ""
"`Long Short-term Time-series Network "
"<../../api/paddlets.models.dl.paddlepaddle.lstnet.html>`_"
msgstr ""

#: ../../source/modules/models/overview.rst:22 957636a1641c4e1e8afc5d9e31c1a78f
msgid ""
"`Multilayer Perceptron "
"<../../api/paddlets.models.dl.paddlepaddle.mlp.html>`_"
msgstr ""

#: ../../source/modules/models/overview.rst:23 efd441508d2f4f39b33bd792a0090474
msgid "`NBEATSModel <../../api/paddlets.models.dl.paddlepaddle.nbeats.html>`_"
msgstr ""

#: ../../source/modules/models/overview.rst:24 efd441508d2f4f39b33bd792a0090474
msgid "`NHiTSModel <../../api/paddlets.models.dl.paddlepaddle.nhits.html>`_"
msgstr ""

#: ../../source/modules/models/overview.rst:25 f0ac262e7d874d32accc05f0d853f42f
msgid "`RnnBlockRegressor <../../api/paddlets.models.dl.paddlepaddle.rnn.html>`_"
msgstr ""

#: ../../source/modules/models/overview.rst:26 f0ac262e7d874d32accc05f0d853f42f
msgid ""
"`Temporal Convolution Net Regressor "
"<../../api/paddlets.models.dl.paddlepaddle.tcn.html>`_"
msgstr ""

#: ../../source/modules/models/overview.rst:27 efd441508d2f4f39b33bd792a0090474
msgid ""
"`Transformer "
"<../../api/paddlets.models.dl.paddlepaddle.transformer.html>`_"
msgstr ""

#: ../../source/modules/models/overview.rst:31 3619878cd7914115a21581205a027d6a
msgid "1. A minimal example"
msgstr "1. 一个最小化的示例"

#: ../../source/modules/models/overview.rst:33 5f6ec2d2d3484c71a3caba22f62eff76
msgid ""
"Below minimal example uses a built-in `RNNBlockRegressor` model to "
"illustrate the basic usage."
msgstr "下方的最小化示例使用了PaddleTS内置的 RNNBlockRegressor 模型来阐述基本的使用方法。"

#: ../../source/modules/models/overview.rst:70 402402b557634bd99da5694328b79fd0
msgid "2. PaddleBaseModel"
msgstr "2. PaddleBaseModel"

#: ../../source/modules/models/overview.rst:72 4f0a16e403aa413c841186a457146d8c
msgid ""
"PaddleBaseModel is the base class for all PaddlePaddle-based time series "
"models. Below is a simplified version of the **PaddleBaseModel** class "
"declaration, the lengthy implementation details are skipped, you may "
"refer to the `PaddleBaseModel API "
"<../../api/paddlets.models.dl.paddlepaddle.paddle_base>`_ to get a full "
"view."
msgstr ""
"`PaddleBaseModel` 是所有基于PaddlePaddle框架构建的时序模型的基类。 下方展示了一个简化版的 "
"`PaddleBaseModel` 类声明， 此处略去了源代码中冗长的实现细节， 旨在于展示最重要的接口定义部分。 您可以参考文档 "
"`PaddleBaseModel API "
"<../../api/paddlets.models.dl.paddlepaddle.paddle_base>`_ 获取完整的代码。"

#: ../../source/modules/models/overview.rst:79 0983cc7119de48dca95fe0069176bcb4
msgid "2.1. Construct method"
msgstr "2.1. 构造方法"

#: ../../source/modules/models/overview.rst:102
#: f1319e7c5e9045ecb57961f30d13ac28
msgid ""
"As shown above, the constructor takes 2 required arguments and an "
"optional argument:"
msgstr "如下所示，构造方法接收2个必需参数和一个可选参数："

#: ../../source/modules/models/overview.rst:104
#: 2766cde8c51847a195ae9cd84cb700bc
msgid ""
"in_chunk_len: The size of the loopback window, i.e. the number of time "
"steps feed to the model."
msgstr "历史窗口的大小。即：提供给模型用于训练的时间步数。"

#: ../../source/modules/models/overview.rst:105
#: 4f682586200d48feafbe3b69ebf3f8be
msgid ""
"out_chunk_len: The size of the forecasting horizon, i.e. the number of "
"time steps output by the model."
msgstr "预测范围的大小。即：模型输出的时间步数。"

#: ../../source/modules/models/overview.rst:106
#: cf6929cba43641a0b789399a7918cde1
msgid ""
"skip_chunk_len: Optional, the number of time steps between in_chunk and "
"out_chunk for a single sample. The skip chunk is neither used as a "
"feature (i.e. X) nor a label (i.e. Y) for a single sample. By default it "
"will NOT skip any time steps."
msgstr ""
"skip_chunk_len: 在单条样本中，夹在 in_chunk 和 out_chunk 之间的时间块的长度。 需要注意的是 "
"skip_chunk_len 既不用做样本的特征(即 X)，也不用做样本的标签(即 "
"Y)。默认情况下不会跳过任何一个时间点。默认情况下不会跳过任何一个时间步。"

#: ../../source/modules/models/overview.rst:110
#: 7a43cb035f104065802a4e57fa56dbd2
msgid ""
"Below Figure 1 shows a concrete example to further explain the above "
"concepts."
msgstr "下方的图1通过一个具体的例子，进一步解释了上面提到的概念。"

#: ../../source/modules/models/overview.rst:-1 89f5407aba504e2399d9229f60321d24
msgid "TSDataset of wind speed with difference skip_chunk_len specified"
msgstr "一个设置了不同的 skip_chunk_len 值的，包含风速的TSDataset数据集"

#: ../../source/modules/models/overview.rst:115
#: bff62bb0d11f4526a2b448505c23d2bd
msgid ""
"Figure 1(a) defines a TSDataset of wind speed with an HOURLY level "
"frequency. It totally contains 7 hours of wind speed data starts at 7:00 "
"and ends at 13:00. Note that the grey shaded wind speed of 14:00 and "
"15:00 are NOT contained in the given TSDataset."
msgstr ""
"图 "
"1（a）定义了一个包含风速的数据集，该数据集的采样频率为小时级。它一共包含从7:00到13:00这7个小时的风速数据。请注意，这份数据集并不包括图中灰色阴影标识的"
" 14:00 - 15:00 这段时间的风速数据。"

#: ../../source/modules/models/overview.rst:119
#: 3b5b1c3f9ba44046a8529cfdc9f0ed73
msgid ""
"Figure 1(b) sets the `in_chunk_len` = 4, `skip_chunk_len` = 0, "
"`out_chunk_len` = 2, which indicates the following:"
msgstr ""
"图 1（b）设置了 `in_chunk_len` = 4, `skip_chunk_len` = 0, `out_chunk_len` = 2, "
"则说明有以下描述成立："

#: ../../source/modules/models/overview.rst:121
#: ../../source/modules/models/overview.rst:128
#: 9602e60b273545ee95a9d4235a8ed773 b099fa82e28044519ff09aa7e985973c
msgid ""
"A 4-hour contiguous chunk of wind speed start at 7:00, i.e., [70, 80, 90,"
" 100], will be treated as in_chunk."
msgstr "一个长度为4小时的，开始于7:00的连续数据块，即 [70, 80, 90, 100]，将被视为 in_chunk。"

#: ../../source/modules/models/overview.rst:122
#: 820d00ff887b4347a1141ec573051a85
msgid ""
"A 2-hour contiguous chunk of wind speed start at 11:00, which follows "
"behind the in_chunk, i.e., [110, 120], will be treated as out_chunk."
msgstr "一个长度为2小时的，紧跟在 in_chunk 后面，开始于11:00的连续数据块，即 [110, 120]，将被视为 out_chunk。"

#: ../../source/modules/models/overview.rst:123
#: f9abcf094c3e4901b5c5acfeb930bb07
msgid ""
"As the `skip_chunk_len` is set to 0, no time units between in_chunk and "
"out_chunk are skipped."
msgstr "由于 `skip_chunk_len` 等于 0，所以在in_chunk和out_chunk之间没有任何时间点被跳过。"

#: ../../source/modules/models/overview.rst:125
#: b67a8f3ff92f48fbb6aca10f327363de
msgid ""
"The value of `in_chunk_len` and `out_chunk_len` shown in Figure 1(c) are "
"identical to that of Figure 1(b), except that the `skip_chunk_len` is "
"different. More specifically, Figure 1(c) sets the `in_chunk_len` = 4, "
"`skip_chunk_len` = 3, `out_chunk_len` = 2, which indicates the following:"
msgstr ""
"图1（b）和图1（c）中的 `in_chunk_len` 和 `out_chunk_len` 的值完全相同，唯一的区别是 "
"`skip_chunk_len` 不同。具体来说，图1（c）中设置了 `in_chunk_len` = 4, `skip_chunk_len` ="
" 3, `out_chunk_len` = 2, 则说明有以下描述成立："

#: ../../source/modules/models/overview.rst:129
#: d3b09615b1304a2f967158a17bfb3ba5
msgid ""
"A 3-hour contiguous chunk of wind speed start at 11:00, which follows "
"behind the in_chunk, i.e., [110, 120, 130], will be skipped."
msgstr "一个长度为2小时的，紧跟在in_chunk后面的，开始于11:00的连续数据块，即 [110, 120, 130]，将被跳过。"

#: ../../source/modules/models/overview.rst:130
#: 6b0d7142c97f4328854370f3918731fc
msgid ""
"A 2-hour contiguous chunk of wind speed start at 14:00, which follows "
"behind the skip_chunk, i.e., [140, 150], will be treated as out_chunk."
msgstr "一个长度为2小时的，紧跟在 skip_chunk 后面，开始于14:00的连续数据块，即 [140, 150]，将被视为 out_chunk。"

#: ../../source/modules/models/overview.rst:132
#: a9212dba24074018af23368835e86829
msgid ""
"In conclusion, the current model will use the wind speed of the past 4 "
"hours to predict the wind speed of the future 2 hours. Meanwhile, it can "
"skip several hours between in_chunk and out_chunk by setting the optional"
" argument `skip_chunk_len` to any positive integer."
msgstr ""
"总结以上例子，即，当前模型会使用过去4小时的风速去预测未来2小时的风速。同时，如果希望在in_chunk和out_chunk之间跳过几个小时的话，可以通过将可选参数"
" `skip_chunk_len` 设置为一个正整数来实现。"

#: ../../source/modules/models/overview.rst:137
#: 96fb90ae1dfb4e86ac37d4ec8ffe8d93
msgid "2.2. Fit"
msgstr "2.2. 训练"

#: ../../source/modules/models/overview.rst:139
#: 21473ba028584f5d85f09a687bed479a
msgid "All the time series models in PaddleTS have the same fit interface."
msgstr "在PaddleTS中，所有的时序模型具有相同的训练接口。"

#: ../../source/modules/models/overview.rst:141
#: cb4a56455ad04eb5a07b747c259e9b81
msgid ""
"To allow users to focus more on the higher level view, the fit method "
"accepts TSDatasets as the training data argument rather than an array-"
"like feature matrix, which encapsulates the details of splitting "
"TSDataset into a set of samples."
msgstr ""
"为了让用户可以更多地关注上层视角，fit 方法不再接收一个类似于数组的特征矩阵，而是接收一个TSDataset数据集作为训练集参数， "
"从而完成了对基于数据集拆分样本集合的细节的封装。"

#: ../../source/modules/models/overview.rst:145
#: 9adec75528eb44a4a59f890ce46b2af9
msgid "The simplified fit method is as follows:"
msgstr "下面展示了简化版的fit方法："

#: ../../source/modules/models/overview.rst:164
#: 94ad9a23852541e4aae44119d42a8e89
msgid "See below Figure 2 for further explanation:"
msgstr "参考以下图2作为进一步解释说明："

#: ../../source/modules/models/overview.rst:-1 31af08ee01d84011bebb9f5429a40e9d
#: 455ca7169e2f4603a8399be755e4c333
msgid "TSDataset Example"
msgstr "TSDataset 示例"

#: ../../source/modules/models/overview.rst:169
#: dd92e80dfcbd471d952938b567b9b4e5
msgid ""
"In this case, the fit method takes the above grey-highlighted TSDataset "
"as the train_data argument and internally split the TSDataset into a set "
"of samples (i.e. red-highlighted in the above figure)."
msgstr ""
"在该示例中，fit方法接收如图中灰色高亮部分所示的TSDataset数据集作为训练集参数， "
"并且在内部完成了数据集的拆分和样本集的构建（如上图中红色高亮部分所示）。"

#: ../../source/modules/models/overview.rst:174
#: 0247e18f28a74c2cbb5b5479f9639850
msgid "2.3. Predict"
msgstr "2.3. 预测"

#: ../../source/modules/models/overview.rst:176
#: 01aba9ffdc4e4e6d87d06dd14015faba
msgid ""
"All models have the same predict interface. It accepts a TSDataset "
"argument contains both `past target` and corresponding covariates, then "
"make prediction on the `past target` and return a newly built TSDataset "
"as the predicted result. The returned TSDataset contains a `future "
"target` time series chunk, with length equals to `out_chunk_len`."
msgstr ""
"所有模型均拥有一致的预测接口。它接收一个同时包含 `past target` 和相关协变量的 TSDataset 数据集参数，并基于数据集的 "
"`past target` 完成预测，返回一个新构建的 TSDataset 作为预测结果。返回的TSDataset数据集包含一个 `future "
"target` 时序数据块，其长度等于 `out_chunk_len`。"

#: ../../source/modules/models/overview.rst:180
#: 701abe83b6654842936a33fa924dfbad
msgid "The following points are worthwhile to be aware of:"
msgstr "对于该接口，有以下几点值得注意："

#: ../../source/modules/models/overview.rst:182
#: 8ffcff0ec88c47be88eb3bd5be7519b3
msgid ""
"The TSDataset argument of this method only contains the past target and "
"corresponding covariates, but not contain the future target."
msgstr "当前方法的TSDataset入参中仅包含过去的观测target和一些相关的协变量，并不包括未来的target。"

#: ../../source/modules/models/overview.rst:183
#: 3e4a8779d7c04580bef184c1776849db
msgid "The predict method only constructs one sample from the TSDataset argument."
msgstr "预测方法仅会从给定的数据集参数中构建一条样本。"

#: ../../source/modules/models/overview.rst:184
#: 66ad99af1acb475aa4b598bcb32cae34
msgid ""
"The length of the predicted result for a single `predict` call is equal "
"to out_chunk_len."
msgstr "对于单次 `predict` 方法的调用，预测得到的结果的长度等于out_chunk_len的值。"

#: ../../source/modules/models/overview.rst:186
#: ea575203448340dab9d9a10d4ccdc136
msgid "Below is the simplified `predict` method:"
msgstr "下方展示了简化版的 `predict` 方法："

#: ../../source/modules/models/overview.rst:201
#: 7a43cb035f104065802a4e57fa56dbd2
msgid ""
"We will further explain it through a concrete example. Suppose we have a "
"TSDataset shown in the below Figure 3:"
msgstr "我们用一个具体示例进一步对其说明。假设我们有一个如下图3所示的TSDataset数据集："

#: ../../source/modules/models/overview.rst:206
#: 3b5b1c3f9ba44046a8529cfdc9f0ed73
msgid ""
"given in_chunk_len = 2, out_chunk_len = 2, skip_chunk_len = 1, the "
"following statements hold:"
msgstr "给定 in_chunk_len = 2, out_chunk_len = 2, skip_chunk_len = 1, 则以下叙述成立："

#: ../../source/modules/models/overview.rst:208
#: d3d88954b6fd4e8792e3a1e3a5c64935
msgid "The data between 7:00 and 13:00 will all be treated as the `past target`."
msgstr "在 7:00 到 13:00 之间的数据都将被视为过去的target数据。"

#: ../../source/modules/models/overview.rst:209
#: 02c1e1fe405a4026b9fecc1d799edfc4
msgid ""
"As only one sample will be constructed per each call, while known that "
"in_chunk_len = 2, skip_chunk_len = 1, out_chunk_len = 2, thus the data "
"between 12:00 and 13:00 will be fed to the fitted model to predict the "
"future data between 15:00 and 16:00, where the data at 14:00 is skipped."
msgstr ""
"由于每次predict调用中都只会有一条样本被构建，同时，已知in_chunk_len = 2, skip_chunk_len = 1, "
"out_chunk_len = 2， 则在 12:00 到 13:00 之间的数据会被送入当前已训练完成的模型，用于预测未来 15:00 到 "
"16:00 之间的未来数据， 其中14:00点的数据会被跳过。"

#: ../../source/modules/models/overview.rst:214
#: dc74e7164f164b9b858a6972db8e0bb5
msgid "2.4. Recursive predict"
msgstr "2.4. 递归多步预测"

#: ../../source/modules/models/overview.rst:215
#: 0c1dd7c5ed344256a7ccb86ab8d285b8
msgid ""
"All models have the same `model.recursive_predict` interface. The "
"recursive strategy involves applying `model.predict` method iteratively "
"for multi-step time series forecasting. The predicted results from the "
"current call will be appended to the given `TSDataset` object and will "
"appear in the loopback window for the next call."
msgstr ""
"所有模型均拥有一致的递归多步预测接口。递归多步预测的策略是：一步步利用 `model.predict` "
"方法实现多步时序预测。当前时刻的预测结果会被添加至 `TSDataset` 时序数据集"
"的目标列中，并在模型预测时，被添加至历史目标值的滑动窗口中用于下一时刻预测。"

#: ../../source/modules/models/overview.rst:220
#: 79ea786b928e4de190b8889b6dffd9b1
msgid ""
"Note that each call of `model.predict` will return a result of length "
"`out_chunk_len`, so `model.recursive_predict` will be called "
"ceiling(`predict_length`/`out_chunk_len`) times to meet the required "
"length."
msgstr ""
"注意：每次调用 `model.predict` 的输出长度为 `out_chunk_len`， 所以 `model.predict` 会被调用 "
"ceiling(`predict_length`/`out_chunk_len`) 次，以满足多步时序的输出长度需求。"

#: ../../source/modules/models/overview.rst:223
#: cd619de7ec824a43869e36529988658b
msgid ""
"For example, the `out_chunk_length` of the model mentioned before is 96, "
"but `model.recursive_predict` allows you to set `predict_length` as 3 * "
"96 or more, then you get a predicted result of length 3 * 96."
msgstr ""
"例如，上述例子中的 `Model` 的 `out_chunk_length` 是 96 ，而 `model.recursive_predict` 允许你将 "
"`predict_length` 设置为 3 * 96 或者更多。"

#: ../../source/modules/models/overview.rst:231
#: c1624f85a4704bee8497066ff2cc8cbe
msgid ""
"Note that `model.recursive_predict` is not supported when "
"`model.skip_chunk` != 0."
msgstr "注意： `model.recursive_predict` 函数在 `model.skip_chunk` != 0 时，无法使用。"

#: ../../source/modules/models/overview.rst:233
#: a69e9d38281a40249e10c17c099a5be0
msgid ""
"For detailed usage, please refer to `API: BaseModel.recursive_predict "
"<../../api/paddlets.models.base.html#paddlets.models.base.BaseModel.recursive_predict>`_"
" ."
msgstr ""
"更多使用细节，请参考：`API: BaseModel.recursive_predict "
"<../../api/paddlets.models.base.html#paddlets.models.base.BaseModel.recursive_predict>`_"

#: ../../source/modules/models/overview.rst:235
#: 425407dfaef64389bcf745491f98e00f
msgid ""
"For advanced predict-related capability `Backtest`, please refer to `API:"
" Backtest <../../api/paddlets.models.utils.backtest.html>`_ ."
msgstr ""
"对于PaddleTS提供的与预测相关的 `Backtest` 回测能力，请参考：`API: Backtest "
"<../../api/paddlets.utils.backtest.html>`_"

#: ../../source/modules/models/overview.rst:238
#: 5b0fae6be36c43b499382437463330bc
msgid "2.5. Model persistence"
msgstr "2.5. 模型持久化"

#: ../../source/modules/models/overview.rst:240
#: 6c38cce10c004fe0a783294bdfd9ef83
msgid ""
"After fitting a PaddleBaseModel, it is necessary to have a way to persist"
" the model for future use without retraining the model. We also provide a"
" unified method to load a persisted PaddleBaseModel from disk."
msgstr "模型训练完成后，我们仍需提供一种将训练完成的模型持久化的方法，以便在未来希望使用该模型时无需对其重复训练。同时，我们也提供一个统一的方法，用于加载一个已经被保存在硬盘上的PaddleBaseModel模型。"

#: ../../source/modules/models/overview.rst:243
#: 258a6180bb7441a696785efd127e63d2
msgid ""
"The following sections show you how to persist a PaddleBaseModel. Note "
"that a model can be saved multiple times."
msgstr "以下的代码示例展示了如何持久化保存一个 PaddleBaseModel 模型。请注意，同一个模型可以被保存多次。"

#: ../../source/modules/models/overview.rst:262
#: bfafd52fc1bf43948ecbe34e9bd81866
msgid "Later you can load back the persisted model with:"
msgstr "在模型保存完成的一段时间之后，您可以通过以下方式加载模型："

